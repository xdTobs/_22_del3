@startuml
left to right direction
class entities.fields.Ferry {
+ int getRent(int)
+ String getName()
+ int getPrice()
+ int getHousePrice()
+ Field executeFieldAction(FieldAction)
}
class entities.fields.Street {
~ Color color
+ int getPrice()
+ int getHousePrice()
+ String getName()
+ int getRent(int)
+ int getHouses()
+ void setHouses(int)
+ Field executeFieldAction(FieldAction)
}
class entities.fields.Tax {
~ int price
~ int percentPrice
+ int getPrice()
+ void setPrice(int)
+ int getPercentPrice()
+ void setPercentPrice(int)
+ Field executeFieldAction(FieldAction)
}
class entities.fields.Start {
+ String getName()
+ Field executeFieldAction(FieldAction)
}
class entities.fields.ChanceField {
+ String getName()
+ Field executeFieldAction(FieldAction)
}
class entities.fields.Jail {
+ String getName()
+ Field executeFieldAction(FieldAction)
}
class entities.fields.Brewery {
+ int getPrice()
+ int getHousePrice()
+ Field executeFieldAction(FieldAction)
+ int getRent(int)
+ String getName()
}
abstract class entities.fields.Field {
- int position
- String name
# FieldPair pair
+ FieldPair getPair()
+ int getPosition()
# void parse(String)
+ {abstract}Field executeFieldAction(FieldAction)
+ String getName()
+ String getHTMLDescription()
+ void setPair(FieldPair)
}
abstract class entities.fields.RentableField {
~ int price
~ int housePrice
~ int houses
- int[] rent
- String ownerName
+ int getHouses()
+ void setHouses(int)
+ int getPrice()
+ int getHousePrice()
+ void BuyProperty()
+ int getRent(int)
+ String getOwner()
+ void setOwnerName(String)
}
class entities.fields.FieldPair {
- Color backgroundColor
- Color foregroundColor
- int[] fieldIds
+ int[] getFieldIds()
+ Color getBackgroundColor()
+ Color getForegroundColor()
}
class entities.fields.Parking {
+ String getName()
+ Field executeFieldAction(FieldAction)
}
interface entities.fields.FieldAction {
~ Field streetAction(Street)
~ void streetPayRentToOwner(Street)
~ boolean streetPlayerOwnsPair(Street)
~ void taxAction(Tax)
~ void goToJailAction(GoToJail)
~ Field ferryAction(Ferry)
~ void chanceFieldAction(ChanceField)
~ Field breweryAction(Brewery)
}
class entities.fields.GoToJail {
+ Field executeFieldAction(FieldAction)
}


entities.fields.RentableField <|-- entities.fields.Ferry
entities.fields.RentableField <|-- entities.fields.Street
entities.fields.Field <|-- entities.fields.Tax
entities.fields.Field <|-- entities.fields.Start
entities.fields.Field <|-- entities.fields.ChanceField
entities.fields.Field <|-- entities.fields.Jail
entities.fields.RentableField <|-- entities.fields.Brewery
entities.fields.Field <|-- entities.fields.RentableField
entities.fields.Field <|-- entities.fields.Parking
entities.fields.Field <|-- entities.fields.GoToJail
'entities.fields.FieldAction ..>entities.fields.Field
@enduml